// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWStructuredBuffer<int3> gridHashBuffer;
RWStructuredBuffer<uint> ballHashBuffer;
RWStructuredBuffer<int> voxelSumBuffer;
RWStructuredBuffer<int> surfaceSumBuffer;
RWStructuredBuffer<int> sumBuffer;

int hashBufferGridBuckets;
int hashBufferBallBuckets;
int hashBufferGridElemsPerBucket;
int hashBufferBallElemsPerBucket;

[numthreads(512,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	if (id.x == 0) {
		voxelSumBuffer[0] = 0;
		surfaceSumBuffer[0] = 0;
        sumBuffer[0] = 0;
        sumBuffer[1] = 0;
    }

    if (id.x < (uint) hashBufferGridBuckets)
    {
        gridHashBuffer[id.x * (hashBufferGridElemsPerBucket + 1)] = 0;
    }

    if (id.x < (uint) hashBufferBallBuckets)
    {
        ballHashBuffer[id.x * (hashBufferBallElemsPerBucket + 1)] = 0;
        for (int i = 0; i < hashBufferBallElemsPerBucket; i++)
        {
            ballHashBuffer[id.x * (hashBufferBallElemsPerBucket + 1) + 1 + i] = 0;
        }

    }

}
